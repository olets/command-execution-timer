/*
External links

Selector found in VitePress default styles,
and reformatted
*/
:is(.vp-external-link-icon,
  .vp-doc a[href*='://'],
  .vp-doc a[target='_blank']) {
  &:not(.no-icon) {
    &::after {
      color: currentColor;
      height: 1em;
      margin-bottom: -0.1em;
      margin-top: 0;
      width: 1em;
    }
  }
}

.vp-code-group input:focus-visible+label::before {
  border-radius: 6px;
  border: 2px solid var(--vp-code-tab-active-bar-color);
  bottom: 2px;
  content: '';
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.vp-doc [class*='language-'] {

  /* Markdown code block copy button */
  >button.copy {
    opacity: 1;
    border: none;
    right: 0;
    top: 1.5rem;
  }

  /* Markdown code block language */
  >span.lang {
    right: 1rem;
    font-size: 14px;
    top: 0.2rem;
  }

  /* Markdown code block */
  code {
    padding-right: 40px;
  }

  /* Markdown code block language */
  >span.lang {
    right: 1rem;
    font-size: 14px;
    top: 0.2rem;
  }
}

.vp-doc {
  p {
    line-height: inherit;
  }

  .custom-block p {
    line-height: inherit;
  }
}

.VPLocalNav,
.VPNavScreen {
  >.container {
    max-width: none;
  }
}

/* sidebar */
.VPSidebar .text,
.VPLocalNav .VPLocalNavOutlineDropdown button,
.VPLocalNav .menu,
.VPNav .VPNavScreenMenuLink,
.VPNavScreenAppearance .text {
  font-size: 1rem;
}

.VPFlyout .VPMenu .label {
  font-size: inherit;
}

/**
 * Nav dropdown toggles
 */
.VPFlyout.active .button .text,
.VPFlyout.active:hover .button .text {
  color: inherit;
}

.VPFlyout.active .button:focus-visible .text,
.VPFlyout.active .button:hover .text {
  color: var(--vp-c-brand-1);
}

/**
 * Nav dropdown items
 */
.VPFlyout.VPNavBarMenuGroup:focus-visible,
.VPFlyout.VPNavBarMenuGroup:hover,
.VPFlyout.VPNavBarMenuGroup .VPLink.active {
  color: inherit;
}

.VPFlyout.VPNavBarMenuGroup .VPLink.active:focus-visible,
.VPFlyout.VPNavBarMenuGroup .VPLink.active:hover {
  color: var(--vp-c-brand-1);
}

.VPNav .VPNavScreenAppearance {
  padding: 0;

  .text {
    color: inherit;
  }
}

.menu .menu-text,
.VPNav .VPNavBarMenuLink,
.VPNavBarMenu button .text,
.DocSearch-Button .DocSearch-Button-Placeholder,
.DocSearch-Button .DocSearch-Button-Key:first-child:after,
.DocSearch-Button .DocSearch-Button-Key {
  @media (min-width: 62.5rem) {
    font-size: 1rem;
  }
}

.VPFlyout .VPMenu .label,
.DocSearch-Button .DocSearch-Button-Placeholder,
.DocSearch-Button .DocSearch-Button-Key:first-child:after,
.DocSearch-Button .DocSearch-Button-Key,
.DocSearch-Button .DocSearch-Search-Icon {
  color: var(--vp-c-text-1);
}

.DocSearch-Button .DocSearch-Button-Keys {
  border-color: var(--vp-c-text-1);
}

h1 img {
  display: inline-block
}

body.has-scroll-bar.VPSidebarItem.is-link:focus-visible {
  transform: translateY(0);
}

/**
 * Fix Firefox glitch, where after clicking on
 * a sidebar link the cursor is stuck on `default`
 * until it stops hovering a link.
 */
.VPSidebarItem .items .VPSidebarItem.is-link {
  margin-bottom: 1px;
}

/**
* Customize default theme styling by overriding CSS variables:
* https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
*/

/**
* Colors
*
* Each colors have exact same color scale system with 3 levels of solid
* colors with different brightness, and 1 soft color.
*
* - `XXX-1`: The most solid color used mainly for colored text. It must
*   satisfy the contrast ratio against when used on top of `XXX-soft`.
*
* - `XXX-2`: The color used mainly for hover state of the button.
*
* - `XXX-3`: The color for solid background, such as bg color of the button.
*   It must satisfy the contrast ratio with pure white (#ffffff) text on
*   top of it.
*
* - `XXX-soft`: The color used for subtle background such as custom container
*   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
*   on top of it.
*
*   The soft color must be semi transparent alpha channel. This is crucial
*   because it allows adding multiple "soft" colors on top of each other
*   to create a accent, such as when having inline code block inside
*   custom containers.
*
* - `default`: The color used purely for subtle indication without any
*   special meanings attched to it such as bg color for menu hover state.
*
* - `brand`: Used for primary brand colors, such as link text, button with
*   brand theme, etc.
*
* - `tip`: Used to indicate useful information. The default theme uses the
*   brand color for this by default.
*
* - `warning`: Used to indicate warning to the users. Used in custom
*   container, badges, etc.
*
* - `danger`: Used to show error, or dangerous message to the users. Used
*   in custom container, badges, etc.
* -------------------------------------------------------------------------- */

:root {
  --vp-code-color: inherit;
  --vp-code-font-size: inherit;
  --vp-code-lang-color: var(--vp-code-tab-text-color);
  --vp-custom-block-font-size: 1em;
  --vp-sidebar-width: 320px;
  /*
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);
  */
}

/**
* Component: Button
* -------------------------------------------------------------------------- */

/* :root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
} */

/**
* Component: Home
* -------------------------------------------------------------------------- */

/* :root {
  --vp-home-hero-name-color: transparent;
  --vp-home-hero-name-background: -webkit-linear-gradient(
    120deg,
    #bd34fe 30%,
    #41d1ff
  );

  --vp-home-hero-image-background-image: linear-gradient(
    -45deg,
    #bd34fe 50%,
    #47caff 50%
  );
  --vp-home-hero-image-filter: blur(44px);
}

@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
} */

/**
* Component: Custom Block
* -------------------------------------------------------------------------- */

/* :root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
} */

/**
* Component: Algolia
* -------------------------------------------------------------------------- */

/* .DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}
*/